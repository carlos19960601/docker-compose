version: "3.8"

services:
  mysql:
    container_name: sx-mysql
    image: mysql:5.7
    restart: always
    secrets:
      - mysql_root_password
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_USER: mysql
      MYSQL_PASSWORD: mysql
    ports:
      - 3306:3306
    expose:
      - 3306
    volumes:
      - ./mysql/data:/var/lib/mysql # data目录我通过.gitignore文件忽略了
      - ./mysql/conf:/etc/mysql/conf.d # 可以在这个目录下指定mysql的配置文件
    networks:
      - sx-net
  redis:
    image: redis:latest
    container_name: sx-redis
    restart: always
    volumes:
      - ./redis/data:/data
      - ./redis/config/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - 6379:6379
    networks:
      - sx-net
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
  nginx:
    container_name: sx-nginx
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d # 可以在这个目录下指定nginx的配置文件
      - ./nginx/logs:/var/logs
    networks:
      - sx-net
  emi-note:
    container_name: emi-note
    image: emi-note:0.0.1
    restart: always
    expose:
      - 3000
    networks:
      - sx-net
  minderly-dashboard:
    container_name: minderly-dashboard
    image: minderly-dashboard:v0.0.1
    restart: always
    expose:
      - 3000
    networks:
      - sx-net
  minderly-admin-api:
    container_name: minderly-admin-api
    image: minderly-admin-api:v0.0.1
    restart: always
    expose:
      - 8000
    entrypoint: ["./server", "-conf=config/prod.yml"]
    networks:
      - sx-net
  minderly-portal-api:
    container_name: minderly-portal-api
    image: minderly-portal-api:v0.0.1
    restart: always
    expose:
      - 8000
    entrypoint: ["./server", "-conf=config/prod.yml"]
    networks:
      - sx-net
  minderly-portal-task:
    container_name: minderly-portal-task
    image: minderly-portal-task:v0.0.1
    restart: always
    expose:
      - 8000
    entrypoint: ["./server", "-conf=config/prod.yml"]
    networks:
      - sx-net
  seaweed-master:
    image: chrislusf/seaweedfs # use a remote image
    container_name: seaweed-master
    restart: always
    command: "master -port=9333 -ip=seaweed-master"
    expose:
      - 9333
      - 19333
    volumes:
      - ./seaweed/master:/data
    networks:
      - sx-net
  seaweed-volume1:
    image: chrislusf/seaweedfs # use a remote image
    container_name: seaweed-volume1
    restart: always
    command: 'volume -mserver="seaweed-master:9333" -max=100 -port=8080 -ip=seaweed-volume1'
    expose:
      - 8080
      - 18080
    volumes:
      - ./seaweed/volume1:/data
    depends_on:
      - seaweed-master
    networks:
      - sx-net
  seaweed-volume2:
    image: chrislusf/seaweedfs # use a remote image
    container_name: seaweed-volume2
    restart: always
    command: 'volume -mserver="seaweed-master:9333" -max=100 -port=8080 -ip=seaweed-volume2'
    expose:
      - 8080
      - 18080
    volumes:
      - ./seaweed/volume2:/data
    depends_on:
      - seaweed-master
    networks:
      - sx-net
  seaweed-volume3:
    image: chrislusf/seaweedfs # use a remote image
    container_name: seaweed-volume3
    restart: always
    command: 'volume -mserver="seaweed-master:9333" -max=100 -port=8080 -ip=seaweed-volume3'
    expose:
      - 8080
      - 18080
    volumes:
      - ./seaweed/volume3:/data
    depends_on:
      - seaweed-master
    networks:
      - sx-net
  seaweed-volume4:
    image: chrislusf/seaweedfs # use a remote image
    container_name: seaweed-volume4
    restart: always
    command: 'volume -mserver="seaweed-master:9333" -max=100 -port=8080 -ip=seaweed-volume4'
    expose:
      - 8080
      - 18080
    volumes:
      - ./seaweed/volume4:/data
    depends_on:
      - seaweed-master
    networks:
      - sx-net
  bytebase:
    image: bytebase/bytebase:2.12.1
    container_name: bytebase
    restart: always
    volumes:
      - ./bytebase/data:/var/opt/bytebase
    expose:
      - 8080
    networks:
      - sx-net
networks:
  sx-net:
    external: true # 使用自定义创建好的网络，我创建的网络名加sx-net，方便与其他服务通信
secrets:
  mysql_root_password:
    file: ./mysql/mysql_root_password.txt # 用文件指定root的密码
